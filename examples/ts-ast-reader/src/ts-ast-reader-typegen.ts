/**
 * This file was automatically generated by Nexus 0.10.0
 * Do not make changes to this file directly
 */

import * as t from "./types/index"
import ts from "typescript"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  NodeFlags: 4194304 | 16384 | 3 | 2 | 64 | 12679168 | 8192 | 2048 | 32 | 512 | 262144 | 1024 | 256 | 128 | 8388608 | 65536 | 2097152 | 16777216 | 1 | 16 | 4 | 0 | 1572864 | 524288 | 1048576 | 1408 | 384 | 8 | 32768 | 131072 | 20480 | 4194816 | 4096
  SyntaxKind: 118 | 54 | 69 | 49 | 120 | 185 | 187 | 169 | 197 | 212 | 119 | 63 | 41 | 62 | 40 | 121 | 58 | 201 | 122 | 55 | 70 | 50 | 146 | 9 | 204 | 186 | 218 | 123 | 73 | 229 | 280 | 191 | 160 | 71 | 51 | 246 | 271 | 74 | 274 | 75 | 240 | 209 | 76 | 19 | 23 | 21 | 57 | 309 | 27 | 149 | 205 | 175 | 7 | 77 | 157 | 124 | 166 | 161 | 78 | 228 | 312 | 79 | 236 | 125 | 152 | 272 | 80 | 198 | 81 | 82 | 223 | 25 | 24 | 190 | 83 | 220 | 311 | 1 | 243 | 84 | 278 | 35 | 33 | 37 | 59 | 36 | 34 | 52 | 254 | 255 | 85 | 257 | 221 | 211 | 86 | 259 | 87 | 88 | 59 | 28 | 60 | 118 | 109 | 283 | 294 | 73 | 8 | 148 | 18 | 73 | 14 | 0 | 2 | 163 | 226 | 89 | 227 | 225 | 144 | 239 | 196 | 90 | 165 | 158 | 126 | 145 | 32 | 67 | 68 | 48 | 47 | 30 | 273 | 72 | 91 | 222 | 109 | 250 | 249 | 248 | 92 | 253 | 183 | 180 | 162 | 127 | 176 | 93 | 282 | 94 | 241 | 110 | 174 | 128 | 284 | 295 | 297 | 296 | 291 | 298 | 289 | 287 | 286 | 288 | 299 | 305 | 300 | 293 | 294 | 303 | 301 | 304 | 283 | 292 | 302 | 285 | 290 | 267 | 268 | 263 | 266 | 260 | 270 | 264 | 262 | 265 | 261 | 269 | 11 | 12 | 129 | 233 | 71 | 71 | 71 | 147 | 117 | 305 | 305 | 147 | 14 | 71 | 108 | 17 | 147 | 7 | 183 | 31 | 66 | 46 | 29 | 28 | 111 | 182 | 181 | 310 | 214 | 156 | 155 | 61 | 45 | 39 | 258 | 245 | 244 | 130 | 3 | 256 | 252 | 247 | 251 | 131 | 132 | 192 | 95 | 4 | 213 | 14 | 307 | 96 | 135 | 8 | 184 | 136 | 188 | 147 | 210 | 18 | 22 | 20 | 171 | 112 | 151 | 195 | 177 | 308 | 65 | 43 | 60 | 44 | 38 | 203 | 202 | 113 | 189 | 275 | 154 | 153 | 114 | 115 | 148 | 56 | 133 | 13 | 134 | 172 | 97 | 230 | 217 | 26 | 159 | 137 | 6 | 276 | 2 | 64 | 42 | 279 | 277 | 208 | 116 | 138 | 10 | 98 | 99 | 232 | 139 | 306 | 215 | 193 | 206 | 15 | 16 | 216 | 17 | 100 | 178 | 101 | 234 | 53 | 102 | 103 | 235 | 170 | 242 | 194 | 140 | 168 | 199 | 104 | 179 | 150 | 163 | 167 | 164 | 141 | 173 | 142 | 0 | 143 | 281 | 237 | 238 | 219 | 105 | 200 | 106 | 107 | 224 | 5 | 108 | 231 | 207 | 117
}

export interface NexusGenRootTypes {
  ArrayTypeNode: ts.ArrayTypeNode;
  BindingPattern: ts.BindingPattern;
  CallSignatureDeclaration: ts.CallSignatureDeclaration;
  ClassDeclaration: ts.ClassDeclaration;
  ComputedPropertyName: ts.ComputedPropertyName;
  ConditionalTypeNode: ts.ConditionalTypeNode;
  ConstructSignatureDeclaration: ts.ConstructSignatureDeclaration;
  ConstructorDeclaration: ts.ConstructorDeclaration;
  ConstructorTypeNode: ts.ConstructorTypeNode;
  EnumDeclaration: ts.EnumDeclaration;
  ExportAssignment: ts.ExportAssignment;
  ExportDeclaration: ts.ExportDeclaration;
  FunctionDeclaration: ts.FunctionDeclaration;
  FunctionTypeNode: ts.FunctionTypeNode;
  GetAccessorDeclaration: ts.GetAccessorDeclaration;
  Identifier: ts.Identifier;
  ImportDeclaration: ts.ImportDeclaration;
  ImportEqualsDeclaration: ts.ImportEqualsDeclaration;
  ImportTypeNode: ts.ImportTypeNode;
  IndexSignatureDeclaration: ts.IndexSignatureDeclaration;
  IndexedAccessTypeNode: ts.IndexedAccessTypeNode;
  InferTypeNode: ts.InferTypeNode;
  InterfaceDeclaration: ts.InterfaceDeclaration;
  IntersectionTypeNode: ts.IntersectionTypeNode;
  JSDoc: ts.JSDoc;
  JSDocAugmentsTag: ts.JSDocAugmentsTag;
  JSDocClassTag: ts.JSDocClassTag;
  JSDocEnumTag: ts.JSDocEnumTag;
  JSDocNamespaceDeclaration: ts.JSDocNamespaceDeclaration;
  JSDocReturnTag: ts.JSDocReturnTag;
  JSDocTemplateTag: ts.JSDocTemplateTag;
  JSDocThisTag: ts.JSDocThisTag;
  JSDocTypeTag: ts.JSDocTypeTag;
  JSDocUnknownTag: ts.JSDocUnknownTag;
  KeywordTypeNode: ts.KeywordTypeNode;
  LiteralType: ts.LiteralTypeNode;
  MappedTypeNode: ts.MappedTypeNode;
  MethodDeclaration: ts.MethodDeclaration;
  MissingDeclaration: ts.MissingDeclaration;
  ModuleDeclaration: ts.ModuleDeclaration;
  NamespaceDeclaration: ts.NamespaceDeclaration;
  NamespaceExportDeclaration: ts.NamespaceExportDeclaration;
  NumericLiteral: ts.NumericLiteral;
  OptionalTypeNode: ts.OptionalTypeNode;
  ParameterDeclaration: ts.ParameterDeclaration;
  ParenthesizedType: ts.ParenthesizedTypeNode;
  PropertyDeclaration: ts.PropertyDeclaration;
  PropertyLikeDeclaration: ts.PropertyLikeDeclaration;
  PropertySignature: ts.PropertySignature;
  QualifiedName: ts.QualifiedName;
  Query: {};
  RestTypeNode: ts.RestTypeNode;
  SetAccessorDeclaration: ts.SetAccessorDeclaration;
  SourceFile: ts.SourceFile;
  StringLiteral: ts.StringLiteral;
  StringLiteralLike: ts.StringLiteralLike;
  ThisTypeNode: ts.ThisTypeNode;
  Token: ts.Token<any>;
  TupleTypeNode: ts.TupleTypeNode;
  TypeAliasDeclaration: ts.TypeAliasDeclaration;
  TypeLiteral: ts.TypeLiteralNode;
  TypeParameterDeclaration: ts.TypeParameterDeclaration;
  TypeReference: ts.TypeReferenceNode;
  UNKNOWN_NODE: { // root type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    name?: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    typeName?: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  UnionType: ts.UnionTypeNode;
  UnnamedNode: { // root type
    text?: string | null; // String
  }
  VariableDeclaration: ts.VariableDeclaration;
  HasJSDoc: ts.HasJSDoc;
  JSDocTag: ts.JSDocTag;
  MaybeOptional: NexusGenRootTypes['ConstructorDeclaration'] | NexusGenRootTypes['FunctionDeclaration'] | NexusGenRootTypes['GetAccessorDeclaration'] | NexusGenRootTypes['MethodDeclaration'] | NexusGenRootTypes['PropertyDeclaration'] | NexusGenRootTypes['PropertySignature'] | NexusGenRootTypes['SetAccessorDeclaration'];
  Node: ts.Node;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DeclarationName: ts.DeclarationName;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  NodeFlags: NexusGenEnums['NodeFlags'];
  SyntaxKind: NexusGenEnums['SyntaxKind'];
}

export interface NexusGenFieldTypes {
  ArrayTypeNode: { // field return type
    elementType: NexusGenRootTypes['Node']; // Node!
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  BindingPattern: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  CallSignatureDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ClassDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    members: NexusGenRootTypes['Node'][]; // [Node!]!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ComputedPropertyName: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ConditionalTypeNode: { // field return type
    checkType: NexusGenRootTypes['Node']; // Node!
    end: number; // Int!
    extendsType: NexusGenRootTypes['Node']; // Node!
    falseType: NexusGenRootTypes['Node']; // Node!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    trueType: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ConstructSignatureDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ConstructorDeclaration: { // field return type
    asteriskToken: NexusGenRootTypes['Token'] | null; // Token
    end: number; // Int!
    exclamationToken: NexusGenRootTypes['Token'] | null; // Token
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parameters: NexusGenRootTypes['ParameterDeclaration'][]; // [ParameterDeclaration!]!
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  ConstructorTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  EnumDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    members: NexusGenRootTypes['Node'][]; // [Node!]!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ExportAssignment: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ExportDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  FunctionDeclaration: { // field return type
    asteriskToken: NexusGenRootTypes['Token'] | null; // Token
    end: number; // Int!
    exclamationToken: NexusGenRootTypes['Token'] | null; // Token
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parameters: NexusGenRootTypes['ParameterDeclaration'][]; // [ParameterDeclaration!]!
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  FunctionTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  GetAccessorDeclaration: { // field return type
    asteriskToken: NexusGenRootTypes['Token'] | null; // Token
    end: number; // Int!
    exclamationToken: NexusGenRootTypes['Token'] | null; // Token
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parameters: NexusGenRootTypes['ParameterDeclaration'][]; // [ParameterDeclaration!]!
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  Identifier: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    text: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ImportDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ImportEqualsDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ImportTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  IndexSignatureDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  IndexedAccessTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  InferTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameter: NexusGenRootTypes['Node']; // Node!
  }
  InterfaceDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  IntersectionTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    types: NexusGenRootTypes['Node'][]; // [Node!]!
  }
  JSDoc: { // field return type
    comment: string | null; // String
    tags: NexusGenRootTypes['JSDocTag'][] | null; // [JSDocTag!]
  }
  JSDocAugmentsTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocClassTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocEnumTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocNamespaceDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  JSDocReturnTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocTemplateTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocThisTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocTypeTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  JSDocUnknownTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  KeywordTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  LiteralType: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  MappedTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  MethodDeclaration: { // field return type
    asteriskToken: NexusGenRootTypes['Token'] | null; // Token
    end: number; // Int!
    exclamationToken: NexusGenRootTypes['Token'] | null; // Token
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parameters: NexusGenRootTypes['ParameterDeclaration'][]; // [ParameterDeclaration!]!
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  MissingDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ModuleDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  NamespaceDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  NamespaceExportDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  NumericLiteral: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  OptionalTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ParameterDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ParenthesizedType: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  PropertyDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  PropertyLikeDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  PropertySignature: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  QualifiedName: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  Query: { // field return type
    parseFile: NexusGenRootTypes['SourceFile']; // SourceFile!
  }
  RestTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node']; // Node!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  SetAccessorDeclaration: { // field return type
    asteriskToken: NexusGenRootTypes['Token'] | null; // Token
    end: number; // Int!
    exclamationToken: NexusGenRootTypes['Token'] | null; // Token
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parameters: NexusGenRootTypes['ParameterDeclaration'][]; // [ParameterDeclaration!]!
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    questionToken: NexusGenRootTypes['Token'] | null; // Token
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  SourceFile: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    statements: NexusGenRootTypes['Node'][]; // [Node!]!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  StringLiteral: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  StringLiteralLike: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  ThisTypeNode: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  Token: { // field return type
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
  }
  TupleTypeNode: { // field return type
    elementTypes: NexusGenRootTypes['Node'][]; // [Node!]!
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  TypeAliasDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    type: NexusGenRootTypes['Node'] | null; // Node
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    typeParameters: NexusGenRootTypes['TypeParameterDeclaration'][] | null; // [TypeParameterDeclaration!]
  }
  TypeLiteral: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  TypeParameterDeclaration: { // field return type
    constraint: NexusGenRootTypes['Node']; // Node!
    default: NexusGenRootTypes['Node']; // Node!
    end: number; // Int!
    expression: NexusGenRootTypes['Node']; // Node!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  TypeReference: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    text: string | null; // String
    typeArguments: NexusGenRootTypes['Node'][] | null; // [Node!]
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  UNKNOWN_NODE: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  UnionType: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    types: NexusGenRootTypes['Node'][]; // [Node!]!
  }
  UnnamedNode: { // field return type
    text: string | null; // String
  }
  VariableDeclaration: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
  HasJSDoc: { // field return type
    jsDoc: NexusGenRootTypes['JSDoc'][] | null; // [JSDoc!]
  }
  JSDocTag: { // field return type
    comment: string | null; // String
    tagName: string | null; // String
  }
  MaybeOptional: { // field return type
    questionToken: NexusGenRootTypes['Token'] | null; // Token
  }
  Node: { // field return type
    end: number; // Int!
    flags: NexusGenEnums['NodeFlags']; // NodeFlags!
    kind: NexusGenEnums['SyntaxKind']; // SyntaxKind!
    kindCode: number; // Int!
    modifiers: NexusGenRootTypes['Token'][] | null; // [Token!]
    name: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
    nameText: string | null; // String
    parent: NexusGenRootTypes['Node']; // Node!
    pos: number; // Int!
    rawText: string; // String!
    typeName: NexusGenRootTypes['DeclarationName'] | null; // DeclarationName
  }
}

export interface NexusGenArgTypes {
  ArrayTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  BindingPattern: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  CallSignatureDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ClassDeclaration: {
    members: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ComputedPropertyName: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ConditionalTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ConstructSignatureDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ConstructorDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ConstructorTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  EnumDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ExportAssignment: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ExportDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  FunctionDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  FunctionTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  GetAccessorDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  Identifier: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ImportDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ImportEqualsDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ImportTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  IndexSignatureDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  IndexedAccessTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  InferTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  InterfaceDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  IntersectionTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  JSDocNamespaceDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  KeywordTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  LiteralType: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  MappedTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  MethodDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  MissingDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ModuleDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  NamespaceDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  NamespaceExportDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  NumericLiteral: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  OptionalTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ParameterDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ParenthesizedType: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  PropertyDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  PropertyLikeDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  PropertySignature: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  QualifiedName: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  Query: {
    parseFile: { // args
      file: string; // String!
    }
  }
  RestTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  SetAccessorDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  SourceFile: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    statements: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  StringLiteral: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  StringLiteralLike: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  ThisTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  TupleTypeNode: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  TypeAliasDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  TypeLiteral: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  TypeParameterDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  TypeReference: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  UNKNOWN_NODE: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  UnionType: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  VariableDeclaration: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
  Node: {
    modifiers: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
    rawText: { // args
      only?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
      skip?: NexusGenEnums['SyntaxKind'][] | null; // [SyntaxKind!]
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  DeclarationName: "BindingPattern" | "ComputedPropertyName" | "Identifier" | "NumericLiteral" | "QualifiedName" | "StringLiteralLike" | "UnnamedNode"
  HasJSDoc: "ClassDeclaration" | "ConstructorDeclaration" | "ParameterDeclaration" | "EnumDeclaration" | "FunctionDeclaration" | "GetAccessorDeclaration" | "IndexSignatureDeclaration" | "InterfaceDeclaration" | "MethodDeclaration" | "ModuleDeclaration" | "NamespaceDeclaration" | "PropertyDeclaration" | "PropertySignature" | "SetAccessorDeclaration" | "TypeAliasDeclaration"
  JSDocTag: "JSDocAugmentsTag" | "JSDocClassTag" | "JSDocEnumTag" | "JSDocReturnTag" | "JSDocTemplateTag" | "JSDocThisTag" | "JSDocTypeTag" | "JSDocUnknownTag"
  MaybeOptional: "ConstructorDeclaration" | "FunctionDeclaration" | "GetAccessorDeclaration" | "MethodDeclaration" | "PropertyDeclaration" | "PropertySignature" | "SetAccessorDeclaration"
  Node: "SourceFile" | "BindingPattern" | "ComputedPropertyName" | "Identifier" | "NumericLiteral" | "QualifiedName" | "StringLiteralLike" | "ArrayTypeNode" | "CallSignatureDeclaration" | "ClassDeclaration" | "ConditionalTypeNode" | "ConstructorDeclaration" | "ParameterDeclaration" | "TypeParameterDeclaration" | "ConstructorTypeNode" | "ConstructSignatureDeclaration" | "EnumDeclaration" | "ExportAssignment" | "ExportDeclaration" | "FunctionDeclaration" | "FunctionTypeNode" | "GetAccessorDeclaration" | "ImportDeclaration" | "ImportEqualsDeclaration" | "ImportTypeNode" | "IndexedAccessTypeNode" | "IndexSignatureDeclaration" | "InferTypeNode" | "InterfaceDeclaration" | "IntersectionTypeNode" | "JSDocNamespaceDeclaration" | "KeywordTypeNode" | "LiteralType" | "MappedTypeNode" | "MethodDeclaration" | "MissingDeclaration" | "ModuleDeclaration" | "NamespaceDeclaration" | "NamespaceExportDeclaration" | "OptionalTypeNode" | "ParenthesizedType" | "PropertyDeclaration" | "PropertyLikeDeclaration" | "PropertySignature" | "RestTypeNode" | "SetAccessorDeclaration" | "StringLiteral" | "ThisTypeNode" | "TupleTypeNode" | "TypeAliasDeclaration" | "TypeLiteral" | "TypeReference" | "UnionType" | "UNKNOWN_NODE" | "VariableDeclaration"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "ArrayTypeNode" | "BindingPattern" | "CallSignatureDeclaration" | "ClassDeclaration" | "ComputedPropertyName" | "ConditionalTypeNode" | "ConstructSignatureDeclaration" | "ConstructorDeclaration" | "ConstructorTypeNode" | "EnumDeclaration" | "ExportAssignment" | "ExportDeclaration" | "FunctionDeclaration" | "FunctionTypeNode" | "GetAccessorDeclaration" | "Identifier" | "ImportDeclaration" | "ImportEqualsDeclaration" | "ImportTypeNode" | "IndexSignatureDeclaration" | "IndexedAccessTypeNode" | "InferTypeNode" | "InterfaceDeclaration" | "IntersectionTypeNode" | "JSDoc" | "JSDocAugmentsTag" | "JSDocClassTag" | "JSDocEnumTag" | "JSDocNamespaceDeclaration" | "JSDocReturnTag" | "JSDocTemplateTag" | "JSDocThisTag" | "JSDocTypeTag" | "JSDocUnknownTag" | "KeywordTypeNode" | "LiteralType" | "MappedTypeNode" | "MethodDeclaration" | "MissingDeclaration" | "ModuleDeclaration" | "NamespaceDeclaration" | "NamespaceExportDeclaration" | "NumericLiteral" | "OptionalTypeNode" | "ParameterDeclaration" | "ParenthesizedType" | "PropertyDeclaration" | "PropertyLikeDeclaration" | "PropertySignature" | "QualifiedName" | "Query" | "RestTypeNode" | "SetAccessorDeclaration" | "SourceFile" | "StringLiteral" | "StringLiteralLike" | "ThisTypeNode" | "Token" | "TupleTypeNode" | "TypeAliasDeclaration" | "TypeLiteral" | "TypeParameterDeclaration" | "TypeReference" | "UNKNOWN_NODE" | "UnionType" | "UnnamedNode" | "VariableDeclaration";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "NodeFlags" | "SyntaxKind";

export type NexusGenInterfaceNames = "HasJSDoc" | "JSDocTag" | "MaybeOptional" | "Node";

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = "DeclarationName";

export interface NexusGenTypes {
  context: t.ContextType;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}