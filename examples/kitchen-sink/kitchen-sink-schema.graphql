### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


"""Bar description"""
interface Bar {
  argsTest(a: InputType = {answer: 2, key: "one"}): Boolean!
  ok: Boolean! @deprecated(reason: "Not ok?")
}

type BarCollection {
  nodes: [Bar!]!
  totalCount: Int!
}

interface Baz {
  """'A' description"""
  a: Bar
  ok: Boolean!
}

scalar Date

type Foo implements Bar {
  argsTest(a: InputType = {answer: 2, key: "one"}): Boolean!
  name: String!
  ok: Boolean! @deprecated(reason: "Not ok?")
}

input InputType {
  answer: Int
  key: String!
  nestedInput: InputType2
}

input InputType2 {
  answer: Int
  key: String!
  someDate: Date!
}

type Mutation {
  ok: Boolean!
  someMutationField(id: ID!): Foo!
}

input NestedType {
  veryNested: String
}

type Query {
  asArgExample(testAsArg: InputType!): String!
  bar: TestObj!
  collectionField(a: Int): BarCollection!
  dateAsList: [Date!]!
  extended: SomeItem!
  getNumberOrNull(a: Int!): Int
  inlineArgs(someArg: SomeArg): String!
  inputAsArgExample(testInput: InputType, testScalar: String): String!
}

input SomeArg {
  arg: NestedType
  someField: String
}

type SomeItem {
  id: ID!
}

type TestObj implements Bar & Baz {
  """'A' description"""
  a: Bar
  argsTest(a: InputType = {answer: 2, key: "one"}): Boolean!
  item: String!
  ok: Boolean!
}

union TestUnion = Foo

interface UnusedInterface {
  ok: Boolean!
}
