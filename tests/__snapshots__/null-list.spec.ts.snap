// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`wrapping for args; nonNullDefault = false; arg def list(String) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(list(String)) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(list(list(String))) 1`] = `"[[[String]]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(list(nonNull(String))) 1`] = `"[[String!]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(list(nullable(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nonNull(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nonNull(list(String))) 1`] = `"[[String]!]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nonNull(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nonNull(nullable(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nullable(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nullable(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nullable(nonNull(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def list(nullable(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(list(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(list(list(String))) 1`] = `"[[String]]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nonNull(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nullable(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(list(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(list(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nonNull(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nullable(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; arg def nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(Foo) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(list(Foo)) 1`] = `"[[Foo]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(list(list(Foo))) 1`] = `"[[[Foo]]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo]!]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nullable(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(list(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo]]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(list(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(String) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(list(String)) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(list(list(String))) 1`] = `"[[[String]]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(list(nonNull(String))) 1`] = `"[[String!]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(list(nullable(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nonNull(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nonNull(list(String))) 1`] = `"[[String]!]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nonNull(nullable(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nullable(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nullable(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nullable(nonNull(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref list(nullable(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(list(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(list(list(String))) 1`] = `"[[String]]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nonNull(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nullable(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(list(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(list(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nonNull(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nullable(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(String) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(list(String)) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(list(list(String))) 1`] = `"[[[String]]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(list(nonNull(String))) 1`] = `"[[String!]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(list(nullable(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nonNull(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nonNull(list(String))) 1`] = `"[[String]!]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nonNull(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nonNull(nullable(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nullable(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nullable(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nullable(nonNull(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def list(nullable(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(list(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(list(list(String))) 1`] = `"[[String]]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nonNull(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nullable(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(list(String)) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(list(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nonNull(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nullable(list(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = false; wrapped arg def nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(String) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(list(String)) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(list(list(String))) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(list(nonNull(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(list(nullable(String))) 1`] = `"[[String]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nonNull(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nonNull(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nonNull(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nonNull(nullable(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nullable(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nullable(list(String))) 1`] = `"[[String!]]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nullable(nonNull(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def list(nullable(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(list(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(list(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nonNull(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nullable(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(list(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(list(list(String))) 1`] = `"[[String!]!]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nonNull(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nullable(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; arg def nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(Foo) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(list(Foo)) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(list(list(Foo))) 1`] = `"[[[Foo!]!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nullable(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo!]]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(list(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(list(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo!]!]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(String) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(list(String)) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(list(list(String))) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(list(nonNull(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(list(nullable(String))) 1`] = `"[[String]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nonNull(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nonNull(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nonNull(nullable(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nullable(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nullable(list(String))) 1`] = `"[[String!]]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nullable(nonNull(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref list(nullable(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(list(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(list(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nonNull(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nullable(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(list(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(list(list(String))) 1`] = `"[[String!]!]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nonNull(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nullable(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(String) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(list(String)) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(list(list(String))) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(list(nonNull(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(list(nullable(String))) 1`] = `"[[String]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nonNull(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nonNull(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nonNull(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nonNull(nullable(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nullable(String)) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nullable(list(String))) 1`] = `"[[String!]]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nullable(nonNull(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def list(nullable(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(String) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(list(String)) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(list(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nonNull(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nullable(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(String) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(list(String)) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(list(list(String))) 1`] = `"[[String!]!]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nonNull(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nullable(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for args; nonNullDefault = true; wrapped arg def nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.list.list.field({type: Foo}) 1`] = `"[[[Foo]]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.list.nonNull.field({type: Foo}) 1`] = `"[[Foo!]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.list.nullable.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nonNull.list.field({type: Foo}) 1`] = `"[[Foo]!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nonNull.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nonNull.nullable.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nullable.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nullable.nonNull.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def list.nullable.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.list.list.field({type: Foo}) 1`] = `"[[Foo]]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nullable.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nullable.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nonNull.nullable.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.list.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nonNull.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nonNull.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nullable.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; nexus def nullable.nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.list.list.field({type: String}) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.list.nonNull.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.list.nullable.field({type: String}) 1`] = `"[[String]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nonNull.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nonNull.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nonNull.nullable.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nullable.list.field({type: String}) 1`] = `"[[String!]]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nullable.nonNull.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref list.nullable.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nullable.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nullable.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nonNull.nullable.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.list.list.field({type: String}) 1`] = `"[[String!]!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.list.nonNull.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.list.nullable.field({type: String}) 1`] = `"[String]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nonNull.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nonNull.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nonNull.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = false; string ref nullable.nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.list.list.field({type: Foo}) 1`] = `"[[[Foo!]!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.list.nonNull.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.list.nullable.field({type: Foo}) 1`] = `"[[Foo]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nonNull.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nonNull.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nonNull.nullable.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nullable.list.field({type: Foo}) 1`] = `"[[Foo!]]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nullable.nonNull.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def list.nullable.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.list.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nullable.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nullable.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nonNull.nullable.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.list.list.field({type: Foo}) 1`] = `"[[Foo!]!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nonNull.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nonNull.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nullable.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; nexus def nullable.nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.list.list.field({type: String}) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.list.nonNull.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.list.nullable.field({type: String}) 1`] = `"[[String]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nonNull.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nonNull.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nonNull.nullable.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nullable.list.field({type: String}) 1`] = `"[[String!]]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nullable.nonNull.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref list.nullable.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nullable.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nullable.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nonNull.nullable.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.list.list.field({type: String}) 1`] = `"[[String!]!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.list.nonNull.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.list.nullable.field({type: String}) 1`] = `"[String]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nonNull.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nonNull.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nonNull.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types with chained API; nonNullDefault = true; string ref nullable.nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(Foo) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(list(Foo)) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(list(list(Foo))) 1`] = `"[[[Foo]]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo]!]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nullable(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(list(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo]]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(list(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(String) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(list(String)) 1`] = `"[[String]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(list(list(String))) 1`] = `"[[[String]]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(list(nonNull(String))) 1`] = `"[[String!]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(list(nullable(String))) 1`] = `"[[String]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nonNull(String)) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nonNull(list(String))) 1`] = `"[[String]!]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nonNull(nullable(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nullable(String)) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nullable(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nullable(nonNull(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref list(nullable(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(list(String)) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(list(list(String))) 1`] = `"[[String]]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nonNull(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nullable(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(list(String)) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(list(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nonNull(list(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nullable(list(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = false; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(Foo) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(list(Foo)) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(list(list(Foo))) 1`] = `"[[[Foo!]!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nullable(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo!]]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(list(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(list(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo!]!]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(String) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(list(String)) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(list(list(String))) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(list(nonNull(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(list(nullable(String))) 1`] = `"[[String]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nonNull(String)) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nonNull(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nonNull(nullable(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nullable(String)) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nullable(list(String))) 1`] = `"[[String!]]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nullable(nonNull(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref list(nullable(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(list(String)) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(list(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nonNull(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nullable(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(list(String)) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(list(list(String))) 1`] = `"[[String!]!]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nonNull(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nullable(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for input types; nonNullDefault = true; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.list.list.field({type: Foo}) 1`] = `"[[[Foo]]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.list.nonNull.field({type: Foo}) 1`] = `"[[Foo!]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.list.nullable.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nonNull.list.field({type: Foo}) 1`] = `"[[Foo]!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nonNull.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nonNull.nullable.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nullable.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nullable.nonNull.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def list.nullable.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.list.list.field({type: Foo}) 1`] = `"[[Foo]]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nullable.list.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nullable.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nonNull.nullable.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.list.list.field({type: Foo}) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nonNull.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nonNull.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nullable.list.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; nexus def nullable.nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.list.list.field({type: String}) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.list.nonNull.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.list.nullable.field({type: String}) 1`] = `"[[String]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nonNull.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nonNull.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nonNull.nullable.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nullable.list.field({type: String}) 1`] = `"[[String!]]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nullable.nonNull.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref list.nullable.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nullable.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nullable.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nonNull.nullable.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.list.list.field({type: String}) 1`] = `"[[String!]!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.list.nonNull.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.list.nullable.field({type: String}) 1`] = `"[String]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nonNull.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nonNull.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nonNull.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = false; string ref nullable.nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.list.list.field({type: Foo}) 1`] = `"[[[Foo!]!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.list.nonNull.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.list.nullable.field({type: Foo}) 1`] = `"[[Foo]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nonNull.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nonNull.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nonNull.nullable.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nullable.list.field({type: Foo}) 1`] = `"[[Foo!]]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nullable.nonNull.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def list.nullable.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.list.list.field({type: Foo}) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.list.nullable.field({type: Foo}) 1`] = `"[Foo]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nullable.list.field({type: Foo}) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nullable.nonNull.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nonNull.nullable.nullable.field({type: Foo}) 1`] = `"Foo!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.list.list.field({type: Foo}) 1`] = `"[[Foo!]!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.list.nonNull.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.list.nullable.field({type: Foo}) 1`] = `"[Foo]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nonNull.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nonNull.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nonNull.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nullable.list.field({type: Foo}) 1`] = `"[Foo!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nullable.nonNull.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; nexus def nullable.nullable.nullable.field({type: Foo}) 1`] = `"Foo"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.list.list.field({type: String}) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.list.nonNull.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.list.nullable.field({type: String}) 1`] = `"[[String]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nonNull.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nonNull.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nonNull.nullable.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nullable.list.field({type: String}) 1`] = `"[[String!]]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nullable.nonNull.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref list.nullable.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.list.list.field({type: String}) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.list.nonNull.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.list.nullable.field({type: String}) 1`] = `"[String]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nonNull.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nonNull.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nullable.list.field({type: String}) 1`] = `"[String!]!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nullable.nonNull.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nonNull.nullable.nullable.field({type: String}) 1`] = `"String!"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.list.list.field({type: String}) 1`] = `"[[String!]!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.list.nonNull.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.list.nullable.field({type: String}) 1`] = `"[String]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nonNull.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nonNull.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nonNull.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nullable.list.field({type: String}) 1`] = `"[String!]"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nullable.nonNull.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types with chained API; nonNullDefault = true; string ref nullable.nullable.nullable.field({type: String}) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(Foo) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(list(Foo)) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(list(list(Foo))) 1`] = `"[[[Foo]]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo]!]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nullable(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(list(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo]]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(list(Foo)) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo]]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(String) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(list(String)) 1`] = `"[[String]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(list(list(String))) 1`] = `"[[[String]]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(list(nonNull(String))) 1`] = `"[[String!]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(list(nullable(String))) 1`] = `"[[String]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nonNull(String)) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nonNull(list(String))) 1`] = `"[[String]!]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nonNull(nullable(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nullable(String)) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nullable(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nullable(nonNull(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref list(nullable(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(list(String)) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(list(list(String))) 1`] = `"[[String]]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nonNull(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nullable(list(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(list(String)) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(list(list(String))) 1`] = `"[[String]]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nonNull(list(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nullable(list(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = false; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(Foo) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(list(Foo)) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(list(list(Foo))) 1`] = `"[[[Foo!]!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(list(nonNull(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(list(nullable(Foo))) 1`] = `"[[Foo]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nonNull(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nonNull(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nonNull(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nonNull(nullable(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nullable(Foo)) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nullable(list(Foo))) 1`] = `"[[Foo!]]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nullable(nonNull(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def list(nullable(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(Foo) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(list(Foo)) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(list(list(Foo))) 1`] = `"[[Foo!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(list(nonNull(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(list(nullable(Foo))) 1`] = `"[Foo]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nonNull(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nonNull(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nonNull(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nonNull(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nullable(Foo)) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nullable(list(Foo))) 1`] = `"[Foo!]!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nullable(nonNull(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nonNull(nullable(nullable(Foo))) 1`] = `"Foo!"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(Foo) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(list(Foo)) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(list(list(Foo))) 1`] = `"[[Foo!]!]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(list(nonNull(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(list(nullable(Foo))) 1`] = `"[Foo]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nonNull(Foo)) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nonNull(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nonNull(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nonNull(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nullable(Foo)) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nullable(list(Foo))) 1`] = `"[Foo!]"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nullable(nonNull(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; nexus def nullable(nullable(nullable(Foo))) 1`] = `"Foo"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(String) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(list(String)) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(list(list(String))) 1`] = `"[[[String!]!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(list(nonNull(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(list(nullable(String))) 1`] = `"[[String]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nonNull(String)) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nonNull(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nonNull(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nonNull(nullable(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nullable(String)) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nullable(list(String))) 1`] = `"[[String!]]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nullable(nonNull(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref list(nullable(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(String) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(list(String)) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(list(list(String))) 1`] = `"[[String!]!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(list(nonNull(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(list(nullable(String))) 1`] = `"[String]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nonNull(String)) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nonNull(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nonNull(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nonNull(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nullable(String)) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nullable(list(String))) 1`] = `"[String!]!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nullable(nonNull(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nonNull(nullable(nullable(String))) 1`] = `"String!"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(String) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(list(String)) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(list(list(String))) 1`] = `"[[String!]!]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(list(nonNull(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(list(nullable(String))) 1`] = `"[String]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nonNull(String)) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nonNull(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nonNull(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nonNull(nullable(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nullable(String)) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nullable(list(String))) 1`] = `"[String!]"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nullable(nonNull(String))) 1`] = `"String"`;

exports[`wrapping for output types; nonNullDefault = true; string ref nullable(nullable(nullable(String))) 1`] = `"String"`;
