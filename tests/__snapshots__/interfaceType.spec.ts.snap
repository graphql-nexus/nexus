// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interfaceType can be implemented by object types 1`] = `
Object {
  "data": Object {
    "user": Object {
      "id": "User:1",
      "name": "Test User",
    },
  },
}
`;

exports[`interfaceType can extend other interfaces 1`] = `
Object {
  "data": Object {
    "dog": Object {
      "breed": "Puli",
      "classification": "Canis familiaris",
      "owner": "Mark",
      "type": "Animal",
    },
  },
}
`;

exports[`interfaceType can not implement itself 1`] = `"GraphQL Nexus: Interface Node can't implement itself"`;

exports[`interfaceType deduplicates interfaces implementing interfaces 1`] = `
"### This file was generated by Nexus Schema
### Do not make changes to this file directly


interface Node {
  id: ID
}

interface Node2 implements Node {
  id: ID
  id2: ID
}

type Foo implements Node2 & Node {
  id: ID
  id2: ID
}

type Query {
  ok: Boolean!
}
"
`;

exports[`interfaceType detects circular dependencies 1`] = `"GraphQL Nexus: Interface circular dependency detected NodeA -> NodeC -> NodeB -> NodeA"`;

exports[`interfaceType logs error when resolveType is not provided for an interface 1`] = `
Array [
  [Error: You have a faulty implementation for your interface type "Node". It is missing a \`resolveType\` implementation.],
]
`;
